<?php

use Hui\Xproject\Entities\Todo;
use Hui\Xproject\Services\MenuManager\MenuManager;
use Illuminate\Support\Facades\Route;

/*
 * Login/logout
 */
Route
  ::middleware('guest')
  ->prefix('/login')
  ->group(function():void{
    Route::get('','Auth\LoginController@showLoginForm')
      ->name('login');
    Route::post('','Auth\LoginController@login')
      ->name('loginPost');
  });
Route::post('/logout','Auth\LoginController@logout')
  ->name('logout');

Route
  ::middleware('guest')
  ->group(function():void{
    /*
     * Forgot password
     */
    Route
      ::prefix('/forgot-password')
      ->group(function():void{
        Route::get('','Auth\ForgotPasswordController@showLinkRequestForm')
          ->name('forgotPassword');
        Route::post('','Auth\ForgotPasswordController@sendResetLinkEmail')
          ->name('forgotPasswordPost');
      });
    Route
      ::prefix('/reset-password')
      ->group(function():void{
        Route::get('/{token}','Auth\ResetPasswordController@showResetForm')
          ->name('resetPassword');
        Route::post('','Auth\ResetPasswordController@reset')
          ->name('resetPasswordPost');
      });
  });

Route
  ::middleware([
    'auth',
    'unblocked'
  ])
  ->group(function():void{
    /*
     * Profile
     */
    Route
      ::prefix('/profile')
      ->group(function():void{
        Route::get('','ProfileController@index')
          ->name('profile');
        Route::post('/save','ProfileController@save')
          ->name('profileSave');
      });

    Route
      ::middleware('complete')
      ->group(function():void{
        /*
         * Dashboard
         */
        Route::get('','DashboardController@index')
          ->name('dashboard')
          ->middleware(middleware(sprintf('visible:%s',MenuManager::OPTION_DASHBOARD)));

        /*
         * To-Dos
         */
        Route
          ::middleware(sprintf('visible:%s',MenuManager::OPTION_TODOS))
          ->prefix('/todos')
          ->group(function():void{
            Route::get('','TodosController@index')
              ->name('todos');
            Route::post('/list','TodosController@list')
              ->name('todosList');
            Route
              ::middleware('role:manager,employer')
              ->group(function():void{
                Route
                  ::middleware(sprintf('can:create,%s',Todo::class))
                  ->group(function():void{
                    Route::post('/load','TodosController@load')
                      ->name('todosLoadNew');
                    Route::post('/save','TodosController@save')
                      ->name('todosSaveNew');
                  });
                Route
                  ::middleware(sprintf('can:createPrivate,%s',Todo::class))
                  ->group(function():void{
                    Route::post('/load/private','TodosController@newPrivate')
                      ->name('todosLoadNewPrivate');
                    Route::post('/save/private','TodosController@createPrivate')
                      ->name('todosSaveNewPrivate');
                  });
                Route
                  ::middleware('can:edit,todo')
                  ->group(function():void{
                    Route::post('/load/{todo}','TodosController@load')
                      ->name('todosLoad');
                    Route::post('/save/{todo}','TodosController@save')
                      ->name('todosSave');
                  });
                Route::post('/clone/{todo}','TodosController@clone')
                  ->name('todosClone')
                  ->middleware('can:clone,todo');
                Route::post('/guess','TodosController@guess')
                  ->name('todosGuess');
                Route::delete('/{todo}','TodosController@delete')
                  ->name('todosDelete')
                  ->middleware('can:delete,todo');
                Route::post('/payments/{todo}','TodosController@payments')
                  ->name('todosPayments')
                  ->middleware('can:viewPayments,todo');
              });
            Route
              ::middleware('role:employer')
              ->group(function():void{
                Route::post('/price','TodosController@price')
                  ->name('todosPrice');
                Route::post('/pay/{todo}','TodosController@pay')
                  ->name('todosPay')
                  ->middleware('can:pay,todo');
                Route::get('/complete-payment','TodosController@completePayment')
                  ->name('todosCompletePayment');
              });
            Route::post('/confirm/{todo}','TodosController@confirm')
              ->name('todosConfirm')
              ->middleware([
                'role:manager,employer',
                'can:confirm,todo'
              ]);
          });

        /*
         * Projects
         */
        Route
          ::middleware(sprintf('visible:%s',MenuManager::OPTION_PROJECTS))
          ->prefix('/projects')
          ->group(function():void{
            Route::get('','ProjectsController@index')
              ->name('projects');
            Route::get('/{todo}','ProjectsController@index')
              ->name('projectsForTodo')
              ->middleware('can:viewProjects,todo');
            Route::post('/list','ProjectsController@list')
              ->name('projectsList');
            Route::post('/download/{project}','ProjectsController@download')
              ->name('projectsDownload')
              ->middleware('can:view,project');
            Route::post('/view/{projectWithTrashed}','ProjectsController@view')
              ->name('projectsView')
              ->middleware('can:view,projectWithTrashed');
            Route::post('/fail/{project}','ProjectsController@fail')
              ->name('projectsFail')
              ->middleware('can:fail,project');
            Route
              ::middleware('role:freelancer')
              ->group(function():void{
                Route::post('/cancel/{project}','ProjectsController@cancel')
                  ->name('projectsCancel')
                  ->middleware('can:cancel,project');
                Route::post('/accept/{project}','ProjectsController@accept')
                  ->name('projectsAccept')
                  ->middleware('can:accept,project');
                Route::post('/submit-id/{project}','ProjectsController@submitId')
                  ->name('projectsSubmitId')
                  ->middleware('can:submitCompletionId,project');
                Route::post('/submit-url/{project}','ProjectsController@submitUrl')
                  ->name('projectsSubmitUrl')
                  ->middleware('can:submitCompletionUrl,project');
                Route
                  ::middleware('can:view,project')
                  ->group(function():void{
                    Route::post('/similar-projects/{project}','ProjectsController@similarProjects')
                      ->name('projectsSimilarProjects');
                    Route::post('/similar-projects/list/{project}/{attr}','ProjectsController@similarProjectsList')
                      ->name('projectsSimilarProjectsList');
                  });
              });
            Route
              ::middleware('role:manager,employer')
              ->group(function():void{
                Route
                  ::middleware('can:editTodoAttrs,projectWithTrashed')
                  ->group(function():void{
                    Route::post('/load/from-todo/{projectWithTrashed}','ProjectsController@loadTodoAttrs')
                      ->name('projectsLoadTodoAttrs');
                    Route::post('/save/from-todo/{projectWithTrashed}','ProjectsController@saveTodoAttrs')
                      ->name('projectsSaveTodoAttrs');
                  });
                Route::post('/complete/{project}','ProjectsController@complete')
                  ->name('projectsComplete')
                  ->middleware('can:complete,project');
                Route::delete('/{project}','ProjectsController@delete')
                  ->name('projectsDelete')
                  ->middleware('can:delete,project');
                Route::post('/restore/{projectWithTrashed}','ProjectsController@restore')
                  ->name('projectsRestore')
                  ->middleware('can:restore,projectWithTrashed');
              });
            Route
              ::middleware([
                'role:manager,employer',
                'can:editProjectAttrs,projectWithTrashed'
              ])
              ->group(function():void{
                Route::post('/load/for-project/{projectWithTrashed}','ProjectsController@loadProjectAttrs')
                  ->name('projectsLoadProjectAttrs');
                Route::post('/save/for-project/{projectWithTrashed}','ProjectsController@saveProjectAttrs')
                  ->name('projectsSaveProjectAttrs');
              });
          });

        /*
         * Statistics
         */
        Route
          ::middleware(sprintf('visible:%s',MenuManager::OPTION_STATISTICS))
          ->prefix('/statistics')
          ->group(function():void{
            Route::get('','StatisticsController@index')
              ->name('statistics');
            Route::post('/list','StatisticsController@list')
              ->name('statisticsList');
            Route::post('/download','StatisticsController@download')
              ->name('statisticsDownload');
          });

        /*
         * Users
         */
        Route
          ::middleware(sprintf('visible:%s',MenuManager::OPTION_USERS))
          ->prefix('/users')
          ->group(function():void{
            Route::get('','UsersController@index')
              ->name('users');
            Route::post('/list','UsersController@list')
              ->name('usersList');
            Route::post('/load','UsersController@load')
              ->name('usersLoadNew');
            Route::post('/save','UsersController@save')
              ->name('usersSaveNew');
            Route
              ::middleware('can:edit,user')
              ->group(function():void{
                Route::post('/load/{user}','UsersController@load')
                  ->name('usersLoad');
                Route::post('/save/{user}','UsersController@save')
                  ->name('usersSave');
                Route::post('/block/{user}','UsersController@block')
                  ->name('usersBlock');
                Route::post('/unblock/{user}','UsersController@unblock')
                  ->name('usersUnblock');
              });
            Route
              ::middleware('admin')
              ->group(function():void{
                Route::post('/preview-import','UsersController@previewImport')
                  ->name('usersPreviewImport');
                Route::post('/import','UsersController@import')
                  ->name('usersImport');
                Route::delete('/{user}','UsersController@delete')
                  ->name('usersDelete');
                Route::post('/restore/{userWithTrashed}','UsersController@restore')
                  ->name('usersRestore');
              });
          });

        /*
         * Log Viewer
         */
        Route
          ::middleware(sprintf('visible:%s',MenuManager::OPTION_LOG_VIEWER))
          ->prefix('/logs')
          ->group(function():void{
            Route::get('','LogsController@index')
              ->name('logs');
            Route::post('/view','LogsController@view')
              ->name('logsView');
            Route::post('/download','LogsController@download')
              ->name('logsDownload');
          });
      });

    /*
     * Set locale
     */
    Route::post('/locale','LocaleController@index')
      ->name('locale');

    /*
     * Upload
     */
    Route::post('/upload','UploadController@post')
      ->name('uploadPost');
    Route::delete('/upload/{code}','UploadController@delete')
      ->name('uploadDelete');
    Route::get('/upload/image/{code}','UploadController@image')
      ->name('uploadImage');
    Route::get('/upload/download/{code}','UploadController@download')
      ->name('uploadDownload');
  });
